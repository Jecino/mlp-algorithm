vector<InfoInsercao> calcularCustoInsercao(Data& data, vector<int>& sequencia, vector<int>& CL){
    vector<InfoInsercao> custoInsercao((sequencia.size() - 1) * CL.size());

    int l = 0;
    for(int a = 0; a < sequencia.size() - 1; a++){
        int i = sequencia[a];
        int j = sequencia[a+1];
        int iteI = a, iteN = sequencia.size() - a; 
        double custoAcumuladoI = 0, custoAcumuladoInserido = 0;

        //Calcula o custo acumulado até o i, pois este não muda com a inserção
        for(int v = 0; v < a; v++){
            custoAcumuladoI += iteI * data.getDistance(sequencia[v], sequencia[v+1]);
            iteI -= 1;
        }

        for(auto k : CL){

            for(int m = 0; m < sequencia.size(); m++){
                
                //Nas duas iterações que envolve o nó k, necessita tratamento especial por não estar inserido na sequencia
                if(m == a){
                    custoAcumuladoInserido += iteN * data.getDistance(i, k);
                }

                else if(m == a + 1){
                    custoAcumuladoInserido += iteN * data.getDistance(k, j);
                }

                //Em valores de m menores que "a" calcula o custo remanescente
                else{

                    //Necessário reduzir o iterador pois a adição de uma operação irá desloca-lo fazendo que não represente mais a sequencia correta
                    if(m > a + 1){
                        custoAcumuladoInserido += iteN * data.getDistance(sequencia[m - 1], sequencia[m]);
                    }
                    else{
                        custoAcumuladoInserido += iteN * data.getDistance(sequencia[m], sequencia[m+1]);
                    }
                }
                //Apenas reduz o iterador se estiver calculando apos da posição do I para frente
                if( m >= a ) iteN -= 1;
            }

            custoInsercao[l].custoAcumulado = custoAcumuladoI + custoAcumuladoInserido;
            custoInsercao[l].noInserido = k;
            custoInsercao[l].arestaRemovida = i;
            l++;
        }
    }

    return custoInsercao;
}